#!/usr/bin/env ruby

require 'rubygems'

begin
  require 'taketo'
  require 'taketo/constructs_factory'
  require 'taketo/commands'
  require 'taketo/taketo_argv_parser'
  require 'optparse'
rescue LoadError => e #development
  $: << File.expand_path('../../lib', __FILE__)
  require 'bundler/setup'
  retry
end

Signal.trap("SIGINT") do
  puts "Terminating"
  exit 1
end

include Taketo

def parse_options
  options = { :config => File.join(ENV['HOME'], ".taketo.rc.rb") }

  OptionParser.new do |opts|
    opts.banner = <<-DESC
A tiny helper utility to make access to servers 
eaiser for different projects and environments.
  DESC

    opts.on("-c CONFIG", "--config") do |c|
      options[:config] = c
    end

    opts.on("--dry-run") do |v|
      options[:dry_run] = v
    end

    opts.on("--debug") do |d|
      options[:debug] = d
    end
  end.parse!

  options
end

def parse_config(config)
  DSL.new.configure(config).tap do |config|
    ConfigValidator.new(config).validate!
  end
end
 
begin
  options = parse_options
  config  = parse_config(options[:config])

  project, environment, server = ARGV.shift(3).map(&:to_sym)

  server = TaketoArgvParser.new(config, ARGV).parse

  remote_command = ARGV.join(" ")
  remote_command = "bash" if remote_command.empty?
  command_to_execute = Commands::SSHCommand.new(server).render(remote_command)

  if options[:dry_run]
    puts command_to_execute
  else
    system command_to_execute
  end
rescue Exception => e
  STDERR.puts "An error occurred: #{e.message}"
  raise if options && options[:debug]
end
